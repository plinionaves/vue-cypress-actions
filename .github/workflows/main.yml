name: Main pipe

on:
  push:
    branches:
      - main
      - development
      - staging

env:
  APP_MODE: "${{ github.ref == 'refs/heads/development' && 'development' || github.ref == 'refs/heads/staging' && 'staging' || github.ref == 'refs/heads/main' && 'production' }}"
  SCRIPT_SUFFIX: "${{ github.ref == 'refs/heads/development' && 'development' || github.ref == 'refs/heads/staging' && 'stage' || github.ref == 'refs/heads/main' && 'prod' }}"
  ENVIRONMENT: "${{ github.ref == 'refs/heads/development' && 'sandbox' || github.ref == 'refs/heads/staging' && 'staging' || github.ref == 'refs/heads/main' && 'production' }}"

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
          cache: 'yarn'
      - run: yarn

  test-unit:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
          cache: 'yarn'
      - run: yarn
      - run: yarn test:unit:ci

  test-e2e:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
          cache: 'yarn'

      - name: Setup custom hosts
        run: echo "127.0.0.1  local.plataform.myapp" | sudo tee -a /etc/hosts

      - name: Debug hosts
        run: cat /etc/hosts

      - run: yarn
      - run: yarn test:e2e:ci

  release:
    runs-on: ubuntu-latest
    needs: [test-unit, test-e2e]
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2

      - name: Bump version and changelog
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.5
        with:
          create_annotated_tag: true
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cat package.json
        run: cat package.json

      - name: Update package.json version
        uses: reedyuk/npm-version@1.1.1
        with:
          version: ${{ steps.tag_version.outputs.new_tag }}

      - name: Cat package.json
        run: cat package.json

      - name: Commit updated package.json
        uses: EndBug/add-and-commit@v7
        with:
          add: package.json
          message: 'chore: release version ${{ steps.tag_version.outputs.new_tag }}'

      - name: Create a GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

  build:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
          cache: 'yarn'
      - run: yarn
      - run: yarn build
      - name: Save dist folder
        uses: actions/upload-artifact@v2
        with:
          name: dist
          if-no-files-found: error
          path: dist

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Download dist folder
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Production build
        if: github.ref == 'refs/heads/main'
        run: echo "Production"

      - name: Development build
        if: github.ref == 'refs/heads/development'
        run: echo "Development"

      - name: Staging build
        if: github.ref == 'refs/heads/staging'
        run: echo "Staging"

      - run: ls -l dist
      - run: echo "Successfully deployed!"

  sentry:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - id: dotenv
        uses: falti/dotenv-action@v0.2.5
        with:
          path: .env.${{ env.APP_MODE }}
      - name: Download dist folder
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Test dynamic command interpolation
        run: yarn echo:${{ env.SCRIPT_SUFFIX }}

      - id: web-platform
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: ${{ github.repository }}
          excludes: prerelease, draft

      - name: Create Sentry release
        env:
          SENTRY_ENVIRONMENT: "${{ github.ref == 'refs/heads/development' && 'development' || github.ref == 'refs/heads/staging' && 'staging' || github.ref == 'refs/heads/main' && 'production' }}"
        run: |
          echo "environment:" ${{ env.SENTRY_ENVIRONMENT }}
          echo "script suffix:" ${{ env.SCRIPT_SUFFIX }}
          echo "env var: " ${{ steps.dotenv.outputs.pjn }}
          echo "version: " ${{ steps.web-platform.outputs.release }}
