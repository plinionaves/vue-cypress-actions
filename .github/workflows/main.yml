name: Production pipe

on:
  push:
    branches:
      - main
      - development
      - staging

env:
  SCRIPT_SUFFIX: "${{ github.ref == 'refs/heads/development' && 'development' || github.ref == 'refs/heads/staging' && 'stage' || github.ref == 'refs/heads/main' && 'prod' }}"

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
          cache: 'yarn'
      - run: yarn

  test-unit:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
          cache: 'yarn'
      - run: yarn
      - run: yarn test:unit:ci

  test-e2e:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
          cache: 'yarn'

      - name: Setup custom hosts
        run: echo "127.0.0.1  local.plataform.myapp" | sudo tee -a /etc/hosts

      - name: Debug hosts
        run: cat /etc/hosts

      - run: yarn
      - run: yarn test:e2e:ci

  build:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
          cache: 'yarn'
      - run: yarn
      - run: yarn build
      - name: Save dist folder
        uses: actions/upload-artifact@v2
        with:
          name: dist
          if-no-files-found: error
          path: dist

  deploy:
    runs-on: ubuntu-latest
    needs: [test-unit, test-e2e, build]
    steps:
      - uses: actions/checkout@v2
      - name: Download dist folder
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Production build
        if: github.ref == 'refs/heads/main'
        run: echo "Production"

      - name: Development build
        if: github.ref == 'refs/heads/development'
        run: echo "Development"

      - name: Staging build
        if: github.ref == 'refs/heads/staging'
        run: echo "Staging"

      - run: ls -l dist
      - run: echo "Successfully deployed!"

  release:
    runs-on: ubuntu-latest
    needs: [test-unit, test-e2e, build]
    steps:
      - uses: actions/checkout@v2
      - name: Download dist folder
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Create Sentry release
        env:
          SENTRY_ENVIRONMENT: "${{ github.ref == 'refs/heads/development' && 'development' || github.ref == 'refs/heads/staging' && 'staging' || github.ref == 'refs/heads/main' && 'production' }}"
        run: |
          echo "environment:" ${{ env.SENTRY_ENVIRONMENT }}
          echo "script suffix:" ${{ env.SCRIPT_SUFFIX }}
